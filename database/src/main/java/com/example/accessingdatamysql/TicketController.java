package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/ticket") // This means URL's start with /ticket (after Application path)
public class TicketController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private TicketRepository ticketRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewTicket (@RequestParam User user_assignee
      , @RequestParam User user_reporter
      , @RequestParam Board board
      , @RequestParam String heading
      , @RequestParam Character priority
      , @RequestParam Integer estimate
      , @RequestParam String comment
      , @RequestParam String status) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Ticket n = new Ticket();
    // n.setName();
    n.setHeading(heading);
    // n.setOwner(owner);
    n.setPriority(priority);
    n.setEstimate(estimate);
    n.setComment(comment);
    n.setStatus(status);
    ticketRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Ticket> getAllTickets() {
    // This returns a JSON or XML with the users
    return ticketRepository.findAll();
  }
}